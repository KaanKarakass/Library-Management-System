version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Admin12345
      POSTGRES_DB: library_information
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: library_app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/library_information
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Admin12345
      SPRING_APPLICATION_NAME: librarymanagement
      JWT_SECRET: mysecretkeymysecretkeymysecretkeymysecretkey
      JWT_EXPIRATION: 3600000
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge